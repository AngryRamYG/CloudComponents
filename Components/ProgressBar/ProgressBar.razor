@namespace AngryMonkey.Cloud.Components
@inject ProgressBarJsInterop js

<div class="amc-progressbar" @ref="ComponentElement">
    <div class="amc-progressbar-left"></div>
    <div class="amc-progressbar-middle">
        <button @onmousedown="MouseDown">
            <svg viewBox="0 0 40 40" width="@CircleSize" height="@CircleSize">
                <circle class="amc-progressbar-circle" cx="20" cy="20" r="18" />
            </svg>
        </button>
    </div>
    <div class="amc-progressbar-right"></div>

    <input type="range" max="@Total" min="0" value="@Value" @onchange="RangeValuChanged" />
</div>

@code {
    private ElementReference ComponentElement { get; set; }

    [Parameter]
    public double BufferValue { get; set; }

    [Parameter]
    public double Value { get; set; } = 0;

    [Parameter]
    public double Total { get; set; }

    [Parameter]
    public double Step { get; set; } = 1;

    [Parameter]
    public int CircleSize { get; set; } = 30;

    [Parameter]
    public EventCallback<ChangeEventArgs> OnChange { get; set; }

    private async Task RangeValuChanged(ChangeEventArgs args)
    {
        double newValue = Convert.ToDouble(args.Value);

        if (Value == newValue)
            return;

        Value = newValue;

        await OnChange.InvokeAsync(new ChangeEventArgs() { Value = Value });
    }

    private async Task MouseDown(MouseEventArgs e)
    {
        await js.MouseDown(ComponentElement);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await js.Init(ComponentElement);
    }
}